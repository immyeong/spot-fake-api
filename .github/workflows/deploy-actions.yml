name: Docker Core Build and Push

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # adopt ‚Üí temurin (AdoptOpenJDK is deprecated)
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: List files in build/libs
        run: ls -R build/libs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spot-fake-api:${{ github.sha }}
          platforms: linux/amd64,linux/arm64

      - name: Create SSH key file
        run: echo "${{ secrets.EC2_SSH_KEY }}" > ssh_key.pem

      - name: Set permissions for SSH key
        run: chmod 600 ssh_key.pem

      - name: Disable strict host key checking
        run: |
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu

            echo "üõ† Updating docker-compose.yml with new image tag"
            sudo sed -i "s|${{ secrets.DOCKERHUB_USERNAME }}/spot-fake-api:.*|${{ secrets.DOCKERHUB_USERNAME }}/spot-fake-api:${{ github.sha }}|" docker-compose.yml

            echo "üîÅ Restarting containers"
            sudo docker compose down --remove-orphans
            sudo docker compose pull
            sudo docker compose up -d
            sudo docker image prune -f
